worker_processes 1;

events { worker_connections 1024; }

http {
    # Act as Load Balancer for 1 node
    upstream sso-service-docker {
        server dockeredaspnetsample:80;
    }

    # Redirect all HTTP traffic to HTTPS
    server {
      return 301 https://$host$request_uri;
    }
    
    # HTTPS Server
    server {
        listen 443;
        # Server name. You need a DNS record (or add this hostname to your hosts file)
        server_name sso-service-docker;

        # SSL configuration
        ssl on;
		# Digital certificates generated with makecert.sh / makecert.bat
        ssl_certificate           /etc/nginx/https_cert.crt;
        ssl_certificate_key       /etc/nginx/https_cert.key;
		ssl_client_certificate    /etc/nginx/ca.crt;
        ssl_crl                   /etc/nginx/ca.crl;
        ssl_verify_client on;  # we require client certificates to access
		ssl_session_timeout 5m;
        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

        # Location configuration to use the core-app.local upstream defined before
        location / {
            proxy_pass          http://sso-service-docker;
            proxy_read_timeout  90;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;       
            proxy_redirect      http://localhost https://sso-service-docker;

			access_log /etc/nginx/nginx.access.log;
            error_log /etc/nginx/nginx.error.log;
        }
    }
}